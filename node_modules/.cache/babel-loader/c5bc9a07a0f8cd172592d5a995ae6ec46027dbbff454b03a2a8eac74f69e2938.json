{"ast":null,"code":"var _jsxFileName = \"/Users/MebiaSebin/invoice_generator/InvoiceGenerator/src/components/BillDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BillDetails = ({\n  onAddItem\n}) => {\n  _s();\n  const [item, setItem] = useState('');\n  const [quantity, setQuantity] = useState(1);\n  const [price, setPrice] = useState(0);\n  const [errorMessage, setErrorMessage] = useState('');\n  const handleAddItem = () => {\n    if (!item.trim()) {\n      setErrorMessage('Please input data in the Item section.');\n      return;\n    }\n\n    // Check if the item contains only alphabetical characters\n    if (!/^[a-zA-Z\\s]+$/.test(item)) {\n      setErrorMessage('Item should only contain alphabetical characters.');\n      return;\n    }\n\n    // Ensure quantity and price are numbers and non-negative\n    if (quantity <= 0) {\n      setErrorMessage('Quantity must be greater than zero.');\n      return;\n    }\n    if (price < 0) {\n      setErrorMessage('Price cannot be negative.');\n      return;\n    }\n    const newItem = {\n      item,\n      quantity: parseInt(quantity, 10),\n      price: parseFloat(price)\n    };\n    onAddItem(newItem);\n    setItem('');\n    setQuantity(1);\n    setPrice(0);\n    setErrorMessage('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Item:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: item,\n      onChange: e => setItem(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Quantity:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: quantity,\n      onChange: e => setQuantity(e.target.value),\n      min: \"1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Price:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: price,\n      onChange: e => setPrice(e.target.value),\n      min: \"0\",\n      step: \"0.01\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddItem,\n      children: \"Add Item\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(BillDetails, \"wOZ7wIqs2kHao32dOuVuVMnpytc=\");\n_c = BillDetails;\nexport default BillDetails;\nvar _c;\n$RefreshReg$(_c, \"BillDetails\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","BillDetails","onAddItem","_s","item","setItem","quantity","setQuantity","price","setPrice","errorMessage","setErrorMessage","handleAddItem","trim","test","newItem","parseInt","parseFloat","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","min","step","onClick","style","color","_c","$RefreshReg$"],"sources":["/Users/MebiaSebin/invoice_generator/InvoiceGenerator/src/components/BillDetails.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst BillDetails = ({ onAddItem }) => {\n    const [item, setItem] = useState('');\n    const [quantity, setQuantity] = useState(1);\n    const [price, setPrice] = useState(0);\n    const [errorMessage, setErrorMessage] = useState('');\n\n    const handleAddItem = () => {\n        if (!item.trim()) {\n            setErrorMessage('Please input data in the Item section.');\n            return;\n        }\n\n        // Check if the item contains only alphabetical characters\n        if (!/^[a-zA-Z\\s]+$/.test(item)) {\n            setErrorMessage('Item should only contain alphabetical characters.');\n            return;\n        }\n\n        // Ensure quantity and price are numbers and non-negative\n        if (quantity <= 0) {\n            setErrorMessage('Quantity must be greater than zero.');\n            return;\n        }\n\n        if (price < 0) {\n            setErrorMessage('Price cannot be negative.');\n            return;\n        }\n\n        const newItem = { item, quantity: parseInt(quantity, 10), price: parseFloat(price) };\n        onAddItem(newItem);\n        setItem('');\n        setQuantity(1);\n        setPrice(0);\n        setErrorMessage('');\n    };\n\n    return (\n        <div>\n            <label>Item:</label>\n            <input\n                type=\"text\"\n                value={item}\n                onChange={(e) => setItem(e.target.value)}\n            />\n            <label>Quantity:</label>\n            <input\n                type=\"number\"\n                value={quantity}\n                onChange={(e) => setQuantity(e.target.value)}\n                min=\"1\"\n            />\n            <label>Price:</label>\n            <input\n                type=\"number\"\n                value={price}\n                onChange={(e) => setPrice(e.target.value)}\n                min=\"0\"\n                step=\"0.01\"\n            />\n            <button onClick={handleAddItem}>Add Item</button>\n            {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\n        </div>\n    );\n};\n\nexport default BillDetails;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}